def reverse(num, i, j) :
     
        while (i < j) :
            temp = num[i]
            num[i] = num[j]
            num[j] = temp
            i = i + 1
            j = j - 1
    def nextPalin(self,num):
        n = len(num)
        if (n <= 3) :
           
            return
    
        mid = n / 2 - 1
         
        i = mid - 1
        while i >= 0 :
            if (int(num[i]) < int(num[i + 1])) :
                break
            i = i - 1
      
        if (i < 0) :
           
            return
     
        smallest = i + 1
        j = i + 2
        while j <= mid :
            if (num[j] > num[i] and num[j] <
                            num[smallest]) :
                smallest = j
            j = j + 1
       
        temp = num[i]
        num[i] = num[smallest]
        num[smallest] = temp
    
        temp = num[n - i - 1]
        num[n - i - 1] = num[n - smallest - 1]
        num[n - smallest - 1] = temp
     
        reverse(num, i + 1, mid)
    
        if (n % 2 == 0) :
            reverse(num, mid + 1, n - i - 2)
      
        else :
            reverse(num, mid + 2, n - i - 2)
    
        result = ''.join(num)
         
        return result
